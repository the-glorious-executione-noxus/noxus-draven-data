server:
  port: 8081
spring:
  # 配置数据源
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://116.196.77.250:3306/user?characterEncoding=utf8&serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: root
#    type: com.alibaba.druid.pool.DruidDataSource
# mybatis-plus相关配置
mybatis:
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  mapper-locations: classpath:mappings/*.xml
  # 以下配置均有默认值,可以不设置
  global-config:
    db-config:
      #主键类型  auto:"数据库ID自增" 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: auto
      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
      field-strategy: NOT_EMPTY
      #数据库类型
      db-type: MYSQL
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    cache-enabled: true # @CacheNamespace 需要在改删查中对缓存刷新操作
    safe-result-handler-enabled: true
  type-handlers-package: com.noxus.draven.tk.handler # 全局类型处理器 实体类需要配合@Column使用
  type-aliases-package: com.noxus.draven.tk.entities




mapper:
  mappers: #自定义的mappers 配置在这个地方
    - tk.mybatis.mapper.common.Mapper
    #- tk.mybatis.mapper.common.Mapper2
  notEmpty: true
  enum-as-simple-type: true # 枚举作为简单类型处理 org.apache.ibatis.type.EnumTypeHandler<E>
  check-example-entity-class: true # 检查表字段相同时，误操作
  safe-delete: true # 防止误操作
  safe-update: true # 防止误更新
  use-java-type: true # 实体类主键提取到父类需要识别泛型时使用
